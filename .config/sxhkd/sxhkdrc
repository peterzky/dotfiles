# -*- mode: conf; eval: (reopen-as-yadm); -*-

# applications
super + z
     ~/.config/bspwm/scripts/org.sh

# tts
super + {_, ctrl} + c
        {tts -sel ,tts -clip}
button8
      tts -sel

# screenshot
Print
      ~/.config/bspwm/scripts/ScreenShot.sh

# dict
super + ctrl + d
        dict -s
button9
        dict -s

super + i
      ~/.config/bspwm/scripts/rambox.sh

super + v
      ~/.config/bspwm/scripts/BarToggle.sh

super + w
      xdotool search --onlyvisible --classname dropdown windowunmap \
      || (xdotool search --classname dropdown windowmap; \
      xdotool search --classname dropdown windowraise; ) \
      || (urxvtc -name dropdown -e zsh -c \
      "tmux has -t dropdown && exec tmux attach-session -d -t dropdown || exec tmux new-session -s dropdown"; \
      xdotool search --classname dropdown windowraise;)

super + e; v
      ~/.config/bspwm/scripts/scratchpad.sh "volumeFloat" "pamix"

super + e; h
      ~/.config/bspwm/scripts/scratchpad.sh "htopFloat" "htop"

super + f
      ~/.config/bspwm/scripts/scratchpad.sh "rangerFloat" "ranger"

super + e; m
      ~/.config/bspwm/scripts/scratchpad.sh "musicFloat" "musicbox"

super + e; {super + e,e,c,q,x,f}
        {emacsclient -nc,emacsclient -nc,chromium,qutebrowser,xournal,firefxo}

# touchpad
XF86Search
       touchpad

# external monitor
XF86Tools
     ~/.config/bspwm/scripts/extmon.sh

# volume
XF86Audio{Raise,Lower}Volume
	pactl set-sink-volume @DEFAULT_SINK@ {+4%,-4%}

XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86Audio{Next,Prev,Play}
	echo {"next","prev","play"} > /tmp/musicbox.fifo

super +XF86Audio{Next,Prev}
      ~/.config/bspwm/scripts/AudioSwitch.sh {"speaker","headphone"}

# terminal emulator
super + Return
	urxvtc

# emacsclient
super + shift + Retrun
        emacsclient -nc

# program launcher
super + space
	rofi -show run

# super + w
#         rofi -show window

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# Make split ratios equal
super + equal
	bspc node @/ --equalize

# Make split ratios balanced
super + minus
	bspc node @/ --balance

# monitors
super + {a,s,d}
        bspc monitor -f '^{1,2,3}'
super + shift + {a,s,d}
        bspc node -m '^{1,2,3}' -f

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
# super + Return
# 	bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + {t,shift + t, shift + f}
	bspc node -t \~{floating,pseudo_tiled,fullscreen}

# set the node flags
super + ctrl + {apostrophe,s,p}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node for the given path jump
# super + {p,b,comma,period}
# 	bspc node -f @{parent,brother,first,second}
super + {n,p}
        bspc node -f {prev,next}.local



# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}


# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last


# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} 'focused:^{1-9,10}.local'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + g
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
