set nohud
let barposition = "top"
map <M-x> :call openCommandBar<CR>
set cncpcompletion
map <C-s> /
set numerichints
set autohidecursor
set typelinkhints
set noautofocus
set nosmoothscroll
set cncpcompletion
let mapleader = "\<Space>"
map q closeTab

map <leader>1 :execute 1%<CR>
map <leader>2 :execute 2%<CR>
map <leader>3 :execute 3%<CR>
map <leader>4 :execute 4%<CR>
map <leader>5 :execute 5%<CR>
map <leader>6 :execute 6%<CR>
map <leader>7 :execute 7%<CR>
map <leader>8 :execute 8%<CR>
map <leader>9 :execute 9%<CR>
map <leader>` :buffer<Space>
let qmark a = ["http://www.reddit.com", "http://twitter.com"]
let i = "http://www.inoreader.com/web_pages"
map u lastClosedTab
map <Leader>e closeTabsToRight
map <Leader>a closeTabsToLeft
map <Leader><Tab> lastUsedTab
map <Leader>bb :buffer<Space>
map <Leader>wd :tabdetach<CR>
map <Leader>wa :tabattach<Space>
map <Leader>ff :bookmarks<Space>
map <C-e> scrollPageDown
map <C-y> scrollPageUp
iunmap <C-y>
imap <C-w> deleteWord
imap <C-a> beginningOfLine
imap <C-e> endOfLine
imap <C-k> deleteToEnd
imap <A-f> forwardWord
imap <A-b> backwardWord
imap <A-d> deleteWord

mpvLink(link) -> {{
   var xhr = new XMLHttpRequest();
   var data = JSON.stringify({"Url": link.href});
   xhr.open("POST","http://127.0.0.1:3111/mpv/",true);
   xhr.setRequestHeader("Content-type","application/json");
   xhr.send(data);
}}
mpv() -> {{
   var xhr = new XMLHttpRequest();
   var data = JSON.stringify({"Url": location.href.toString()});
   xhr.open("POST","http://127.0.0.1:3111/mpv/",true);
   xhr.setRequestHeader("Content-type","application/json");
   xhr.send(data);
}}
downloadLink(link) -> {{
  var xhr = new XMLHttpRequest();
  var data = JSON.stringify({"Url": link.href });
  xhr.open("POST","http://127.0.0.1:3111/youtube-dl/",true);
  xhr.setRequestHeader("Content-type","application/json");
  xhr.send(data);
}}
map <Leader>dl createScriptHint(downloadLink)
map <Leader>pp :call mpv<CR>
map <Leader>pl createScriptHint(mpvLink)
map <Leader>fs :call inoreader<CR>
let nextmatchpattern="\s*下一页|下一頁|下一章|下一张|下一篇|下页|后页\s*,^\bnext\b,\\bnext\\b,^>$,^(>>|)$,^(>|),(>|)$,\\bmore\\b"
let previousmatchpattern="\s*上一页|上一頁|上一章|上一张|上一篇|上页|前页\s*,^\bprev|previous\b,\\bprev|previous\\b,^<$,^(<<|)$,^(<|),(<|)$"
let blacklists = ["https://www.shanbay.com/*","https://www.inoreader.com/*","http://www.keybr.com/*"]
